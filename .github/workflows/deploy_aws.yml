name: Deploy to Amazon ECS
run-name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vacationplanner
  ECS_SERVICE: vacation_stay_scrapper
  ECS_CLUSTER: vacation-planner
  ECS_TASK_DEFINITION: vacation-planner


permissions:
  contents: read

jobs:
  micro-services:
    name: Micro Services
    runs-on: ubuntu-latest
    outputs:
      dockerfile_folders: ${{ steps.micro-services.outputs.dockerfile_folders }}
    steps:
    - name: Preparing microservices
      id: micro-services
      run: |
        dockerfile_folders=()
        for folder in */; do
            if [ -f "$folder/Dockerfile" ]; then
                echo "Image to build: $folder"
                dockerfile_folders+=("$folder")
            fi
        done
        echo "dockerfile_folders=dockerfile_folders" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        max-parallel: [ 2 ]
        folders: ${{ fromJson(needs.micro-services.outputs.dockerfile_folders) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        DOCKER_HUB_USERNAME : ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_REPOSITORY : "fs-service"
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo ${{ matrix.folders }} 
        cd ${{ matrix.folders }}
        docker build -t $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPOSITORY:${{ matrix.folders }}_$IMAGE_TAG .
        docker push $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPOSITORY:$IMAGE_TAG
        echo "image=$DOCKER_HUB_USERNAME/$DOCKER_HUB_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
